{"ast":null,"code":"var _jsxFileName = \"/home/avallejos/Escritorio/learning-chatbot-master/src/components/OpenAIQuestion/OpenAIQuestion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OpenAIQuestion = props => {\n  _s();\n\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [loading, setLoading] = useState(false); // Function to handle the API request to your Python backend (Flask)\n\n  const handleQuestionSubmit = async () => {\n    if (!question) return;\n    setLoading(true);\n\n    try {\n      // Send the question to your Flask backend (assuming your API is at '/api/ask')\n      const response = await fetch('/api/ask', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question\n        })\n      });\n      const data = await response.json();\n      setAnswer(data.answer); // Set the answer received from the backend\n    } catch (error) {\n      setAnswer('Lo siento, algo salió mal.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pregunta algo:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: question,\n      onChange: e => setQuestion(e.target.value),\n      placeholder: \"Escribe tu pregunta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleQuestionSubmit,\n      disabled: loading,\n      children: loading ? 'Cargando...' : 'Enviar pregunta'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), answer && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Respuesta:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), \" \", answer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OpenAIQuestion, \"sPo7xlzhJCU5WBjfVz9IoXzIjTE=\");\n\n_c = OpenAIQuestion;\nexport default OpenAIQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpenAIQuestion\");","map":{"version":3,"sources":["/home/avallejos/Escritorio/learning-chatbot-master/src/components/OpenAIQuestion/OpenAIQuestion.js"],"names":["React","useState","OpenAIQuestion","props","question","setQuestion","answer","setAnswer","loading","setLoading","handleQuestionSubmit","response","fetch","method","headers","body","JSON","stringify","data","json","error","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC,CAHgC,CAKhC;;AACA,QAAMS,oBAAoB,GAAG,YAAY;AACvC,QAAI,CAACN,QAAL,EAAe;AAEfK,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAI;AACF;AACA,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAD,EAAa;AACvCC,QAAAA,MAAM,EAAE,MAD+B;AAEvCC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAF8B;AAGvCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEb,UAAAA;AAAF,SAAf;AAHiC,OAAb,CAA5B;AAKA,YAAMc,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;AACAZ,MAAAA,SAAS,CAACW,IAAI,CAACZ,MAAN,CAAT,CARE,CAQuB;AAC1B,KATD,CASE,OAAOc,KAAP,EAAc;AACdb,MAAAA,SAAS,CAAC,4BAAD,CAAT;AACD,KAXD,SAWU;AACRE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAnBD;;AAqBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEL,QAFT;AAGE,MAAA,QAAQ,EAAGiB,CAAD,IAAOhB,WAAW,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAH9B;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AAAQ,MAAA,OAAO,EAAEb,oBAAjB;AAAuC,MAAA,QAAQ,EAAEF,OAAjD;AAAA,gBACGA,OAAO,GAAG,aAAH,GAAmB;AAD7B;AAAA;AAAA;AAAA;AAAA,YARF,EAYGF,MAAM,iBAAI;AAAA,8BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,OAAgCA,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,YAZb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA3CD;;GAAMJ,c;;KAAAA,c;AA6CN,eAAeA,cAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst OpenAIQuestion = (props) => {\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // Function to handle the API request to your Python backend (Flask)\n  const handleQuestionSubmit = async () => {\n    if (!question) return;\n\n    setLoading(true);\n\n    try {\n      // Send the question to your Flask backend (assuming your API is at '/api/ask')\n      const response = await fetch('/api/ask', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ question }),\n      });\n      const data = await response.json();\n      setAnswer(data.answer);  // Set the answer received from the backend\n    } catch (error) {\n      setAnswer('Lo siento, algo salió mal.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <h3>Pregunta algo:</h3>\n      <input\n        type=\"text\"\n        value={question}\n        onChange={(e) => setQuestion(e.target.value)}\n        placeholder=\"Escribe tu pregunta\"\n      />\n      <button onClick={handleQuestionSubmit} disabled={loading}>\n        {loading ? 'Cargando...' : 'Enviar pregunta'}\n      </button>\n\n      {answer && <p><strong>Respuesta:</strong> {answer}</p>}\n    </div>\n  );\n};\n\nexport default OpenAIQuestion;\n"]},"metadata":{},"sourceType":"module"}